/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
    "/api/Compiler/{compileId}": {
        get: {
            parameters: {
                path: {
                    compileId: string;
                };
            };
            responses: {
                /** @description Success */
                200: {
                    content: {
                        "text/plain": components["schemas"]["CompileResponse"];
                        "application/json": components["schemas"]["CompileResponse"];
                        "text/json": components["schemas"]["CompileResponse"];
                    };
                };
            };
        };
    };
    "/api/Compiler": {
        post: {
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["SourceCode"];
                    "text/json": components["schemas"]["SourceCode"];
                    "application/*+json": components["schemas"]["SourceCode"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    content: {
                        "text/plain": components["schemas"]["CompileResponse"];
                        "application/json": components["schemas"]["CompileResponse"];
                        "text/json": components["schemas"]["CompileResponse"];
                    };
                };
            };
        };
    };
    "/api/File/{filename}": {
        get: {
            parameters: {
                path: {
                    filename: string;
                };
            };
            responses: {
                /** @description Success */
                200: {
                    content: never;
                };
            };
        };
    };
}

export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        CompileResponse: {
            id: string;
            sourceCode: string;
            compiledCode: string;
            imageAddress: string;
        };
        SourceCode: {
            code: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
